/*
    A little HACK that makes working with spread operators easier,

    spread(null);           //Compile Error
    spread(undefined);      //Compile Error
    spread(2);              //Compile Error
    spread(1);              //Compile Error
    spread("test");         //Compile Error
    spread(true);           //Compile Error


    spread(()=>{});         //OK : {}
    spread(new Date());     //OK : {}
    spread({});             //OK : {}
    spread({ test : 5 });   //OK : { test : 5 }

*/
export function spread<T0 extends object> (i0 : T0) : T0;
export function spread<T0 extends object, T1 extends object> (i0 : T0, i1 : T1) : T0&T1;
export function spread<T0 extends object, T1 extends object, T2 extends object> (i0 : T0, i1 : T1, i2 : T2) : T0&T1&T2;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3) : T0&T1&T2&T3;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4) : T0&T1&T2&T3&T4;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5) : T0&T1&T2&T3&T4&T5;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6) : T0&T1&T2&T3&T4&T5&T6;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7) : T0&T1&T2&T3&T4&T5&T6&T7;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8) : T0&T1&T2&T3&T4&T5&T6&T7&T8;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14, i15 : T15) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14&T15;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14, i15 : T15, i16 : T16) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14&T15&T16;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14, i15 : T15, i16 : T16, i17 : T17) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14&T15&T16&T17;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object, T18 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14, i15 : T15, i16 : T16, i17 : T17, i18 : T18) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14&T15&T16&T17&T18;
export function spread<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object, T18 extends object, T19 extends object> (i0 : T0, i1 : T1, i2 : T2, i3 : T3, i4 : T4, i5 : T5, i6 : T6, i7 : T7, i8 : T8, i9 : T9, i10 : T10, i11 : T11, i12 : T12, i13 : T13, i14 : T14, i15 : T15, i16 : T16, i17 : T17, i18 : T18, i19 : T19) : T0&T1&T2&T3&T4&T5&T6&T7&T8&T9&T10&T11&T12&T13&T14&T15&T16&T17&T18&T19;
export function spread<T extends object> (...arr : T[]) : T;
export function spread<T extends object> (...arr : T[]) : T {
    for (let obj of arr) {
        if (!(obj instanceof Object)) {
            throw new Error(`Cannot use spread() on non-object; ${typeof obj}`);
        }
    }
    return Object.assign(
        {},
        ...arr
    ) as any;
}

/*
Exports generated via,

function gen (n) {
	let result = `export function spread<`;
	let args0 = [];
	let args1 = [];
	let args2 = [];
	for (let i=0; i<n; ++i) {
		args0.push(`T${i} extends object`);
		args1.push(`i${i} : T${i}`);
		args2.push(`T${i}`);
	}
	return `export function spread<${args0.join(", ")}> (${args1.join(", ")}) : ${args2.join("&")};`;
}
arr = [];
for (let i=1; i<21; ++i) {
	arr.push(gen(i));
}
arr.join("\n");
*/
