import { Optional } from "./Optional";
export declare function coalesce<T>(arg0: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, arg4: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, arg4: Optional<T>, arg5: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, arg4: Optional<T>, arg5: Optional<T>, arg6: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, arg4: Optional<T>, arg5: Optional<T>, arg6: Optional<T>, arg7: Optional<T>, def: T): T;
export declare function coalesce<T>(arg0: Optional<T>, arg1: Optional<T>, arg2: Optional<T>, arg3: Optional<T>, arg4: Optional<T>, arg5: Optional<T>, arg6: Optional<T>, arg7: Optional<T>, arg8: Optional<T>, def: T): T;
export declare function coalesce<T>(...args: Optional<T>[]): T | undefined;
