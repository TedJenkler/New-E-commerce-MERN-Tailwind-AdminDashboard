export type Ctor<T> = {new(...args:any[]):T};
export type Ctor0Arg<T> = {new():T} & Ctor<T>;
export type Ctor1Arg<Arg0, T> = {new(arg0 : Arg0):T} & Ctor<T>;
export type Ctor2Arg<Arg0, Arg1, T> = {new(arg0 : Arg0, arg1 : Arg1):T} & Ctor<T>;
export type Ctor3Arg<Arg0, Arg1, Arg2, T> = {new(arg0 : Arg0, arg1 : Arg1, arg2 : Arg2):T} & Ctor<T>;
export type Ctor4Arg<Arg0, Arg1, Arg2, Arg4, T> = {new(arg0 : Arg0, arg1 : Arg1, arg2 : Arg2, arg4 : Arg4):T} & Ctor<T>;
export type Ctor5Arg<Arg0, Arg1, Arg2, Arg4, Arg5, T> = {new(arg0 : Arg0, arg1 : Arg1, arg2 : Arg2, arg4 : Arg4, arg5 : Arg5):T} & Ctor<T>;
//Any more arguments and you should really be refactoring your constructor, anyway
