export function removeKey<T extends object, K extends keyof T> (obj : T, key : K) : { [key in Exclude<keyof T, K>] : T[key] } {
    if (!(obj instanceof Object)) {
        throw new Error(`Cannot use removeKey() on non-object; ${typeof obj}`);
    }
    const result = {...(obj as any)};
    delete result[key];
    return result;
}
